@using static MauiBlazorClient.Components.Pages.AuthPage.Auth

@inject IAuthenticationService AuthenticationService;
@inject IAnimatedNavigationManager Navigation;


<EditForm Model="@_inputModel" FormName="Login" OnValidSubmit="@Submit" disabled="@SubmitState?.IsSubmitting">
    <div class="title">Sign in</div>
    <DataAnnotationsValidator />
    <div>
        <InputText  @bind-Value="_inputModel.Email" placeholder="Email" type="" />
        <ValidationMessage For="() => _inputModel.Email" />
    </div>
    <div>
        <InputText @bind-Value="_inputModel.Password" placeholder="Password" />
        <ValidationMessage For="() => _inputModel.Password" />
    </div>
    <button class="btn btn-primary" type="submit">Login</button>
    <ErrorMessage Message="@_errorMessage"/>
</EditForm>


@code {
    [CascadingParameter(Name = "SubmitState")]
    public SubmitState? SubmitState { get; set; }

    private LoginRequest _inputModel = new();
    private string? _errorMessage;


    private async Task Submit()
    {
        SubmitState!.IsSubmitting = true;
        _errorMessage = string.Empty;

        _errorMessage = await AuthenticationService.LoginAsync(_inputModel);

        if (string.IsNullOrEmpty(_errorMessage))
            await Navigation.NavigateToAsync("/main");

        SubmitState!.IsSubmitting = false;
    }
}
