@using static MauiBlazorClient.Components.Pages.AuthPage.Auth;

@inject IAuthenticationService AuthenticationService;
@inject IAnimatedNavigationManager Navigation;


<EditForm Model="@_inputModel" FormName="Register" OnValidSubmit="@Submit" disabled="@AuthState?.IsSubmitting">
    <div class="title">Sign up</div>
    <DataAnnotationsValidator />
    <div>
        <InputText @bind-Value="_inputModel.Name" placeholder="Name" />
        <ValidationMessage For="() => _inputModel.Name" />
    </div>
    <div>
        <InputText @bind-Value="_inputModel.Email" placeholder="Email" />
        <ValidationMessage For="() => _inputModel.Email" />
    </div>
    <div>
        <InputText @bind-Value="_inputModel.Password" placeholder="Password" />
        <ValidationMessage For="() => _inputModel.Password" />
    </div>

    <div class="manager">
        <Button OnClick="_ => AuthState.IsLogin = true">Have account</Button>
        <Button type="submit">Register</Button>
    </div>
    <ErrorMessage Message="@_errorMessage" />
</EditForm>


@code {
    [CascadingParameter(Name = "AuthState")]
    public AuthState? AuthState { get; set; }

    private RegisterRequest _inputModel = new();
    private string? _errorMessage;


    private async Task Submit()
    {
        AuthState!.IsSubmitting = true;
        _errorMessage = string.Empty;

        _errorMessage = await AuthenticationService.RegisterAsync(_inputModel);

        if (string.IsNullOrEmpty(_errorMessage))
            await Navigation.NavigateToAsync("/main");

        AuthState!.IsSubmitting = false;
    }

}
